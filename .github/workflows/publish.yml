name: publish

on:
  push:
    tags:
      - "**"

jobs:
  vars:
    runs-on: ubuntu-latest
    outputs:
      command: ${{ steps.result.outputs.command }}
    steps:
      - if: startsWith(github.ref, 'refs/tags/@oomol/executor')
        run: |-
          echo "command=node-executor" >> $GITHUB_OUTPUT
        id: step1
      # 带个 -v 和 types tag 区分
      - if: startsWith(github.ref, 'refs/tags/@oomol/oocana-v')
        run: |-
          echo "command=oocana" >> $GITHUB_OUTPUT
        id: step2
      - if: startsWith(github.ref, 'refs/tags/@oomol/oocana-sdk')
        run: |-
          echo "command=oocana-sdk" >> $GITHUB_OUTPUT
        id: step3
      - if: startsWith(github.ref, 'refs/tags/@oomol/oocana-types')
        run: |-
          echo "command=oocana-types" >> $GITHUB_OUTPUT
        id: step4
      - id: result
        run: |
          if [ -n "${{ steps.step1.outputs.command }}" ]; then
            echo "command=${{ steps.step1.outputs.command }}" >> $GITHUB_OUTPUT
          elif [ -n "${{ steps.step2.outputs.command }}" ]; then
            echo "command=${{ steps.step2.outputs.command }}" >> $GITHUB_OUTPUT
          elif [ -n "${{ steps.step3.outputs.command }}" ]; then
            echo "command=${{ steps.step3.outputs.command }}" >> $GITHUB_OUTPUT
          elif [ -n "${{ steps.step4.outputs.command }}" ]; then
            echo "command=${{ steps.step4.outputs.command }}" >> $GITHUB_OUTPUT
          else
            exit 1
          fi
  publish:
    runs-on: ubuntu-latest
    needs: vars
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
      - uses: actions/setup-node@v4
        with:
          registry-url: https://npm.pkg.github.com/
          cache: pnpm
      - name: install
        run: pnpm install --frozen-lockfile
      - name: build
        run: pnpm run build
      - name: publish to github registry
        run: |
          pnpm publish -F ${{ needs.vars.outputs.command }} --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
      - uses: actions/setup-node@v4
        with:
          registry-url: https://registry.npmjs.org
          cache: pnpm
      - name: publish to npm
        if: github.repository_owner == 'oomol'
        run: |
          npm pkg set publishConfig.registry=https://registry.npmjs.org
          pnpm publish -F ${{ needs.vars.outputs.command }} --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_PUBLISH_TOKEN}} # expire at 2026-03-13
  trigger:
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - name: Trigger
        run: |
          curl -X POST -H "Content-Type: application/json" https://github-package-event-worker.cloud-c35.workers.dev/renovate --data '{"repos": [{"owner": "oomol", "repo": "oomol-studio-core", "workflow_id": "renovate.yml"}, {"owner": "oomol", "repo": "oomol-studio-code", "workflow_id": "oomol-renovate.yml"}]}'
